# Set the user under which NGINX worker processes run for privilege separation and security
user  nginx;

# Automatically set the number of worker processes based on available CPU cores for maximum efficiency
worker_processes  auto;

# Log errors with 'warn' level to the specified file for troubleshooting
error_log  /var/log/nginx/error.log warn;

# Store the master process PID in this file for process management
pid        /var/run/nginx.pid;

events {
    # Set the maximum number of simultaneous connections per worker process for scalability
    worker_connections  8192;

    # Use the epoll event method for highly efficient I/O on Linux
    use epoll;
}

# Stream block handles TCP/UDP proxying, ideal for Minecraft and similar applications
stream {
    upstream backend {
        # Define the target backend server for Minecraft (replace ${BACKEND_SERVER} with your server's address)
        # max_fails and fail_timeout control backend health checking and failover timing
        server ${BACKEND_SERVER}:25565 max_fails=300 fail_timeout=300s;
    }

    server {
        # Listen for incoming Minecraft connections on TCP port 25565 (default Minecraft port)
        listen 25565;

        # Pass all incoming connections to the defined upstream backend
        proxy_pass backend;

        # Enable TCP_NODELAY to immediately send packets without waiting for the buffer to fill
        # This reduces latency and is critical for real-time applications like Minecraft
        tcp_nodelay on;

        # Enable TCP keepalive for proxied connections, if supported by your NGINX version (1.15.0+)
        # This helps keep long-lived connections alive and detects dead peers faster
        proxy_socket_keepalive on;

        # Reduce the proxy buffer size to minimize buffering, allowing data to pass through as quickly as possible
        # Default is 8k; lowering to 4k may further reduce latency for real-time traffic
        proxy_buffer_size 4k;

        # Set the timeout for connections to the backend server
        # If the backend does not respond in 15 seconds, the connection will be closed
        proxy_timeout 15s;
    }
}
